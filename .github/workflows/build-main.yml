name: Build Main

on:
  push:
    branches:
      - main
  schedule:
    # Run on the 1st day of every month at 18:00 UTC
    - cron: '0 18 1 * *'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3

      # Set up Python using setup-python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # **Set up Conda and install dependencies only for Python 3.13**
      - name: Set up Conda for Python 3.13
        if: matrix.python-version == '3.13'
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.13
          auto-update-conda: true
          activate-environment: build-env
          environment-file: environment.yml
          channels: conda-forge

      - name: Install Build Dependencies for Python 3.13
        if: matrix.python-version == '3.13'
        run: |
          conda install -c conda-forge fftw openblas cmake pkg-config
          conda deactivate  # Deactivate if necessary

      # Install Python dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]

      # Run Pytest with coverage
      - name: Test with pytest
        run: |
          pytest --cov-report xml --cov=aicsshparam aicsshparam/tests/

      # Upload Code Coverage
      - name: Upload Code Coverage
        uses: codecov/codecov-action@v3

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # **Set up Conda and install dependencies only for Python 3.13**
      - name: Set up Conda for Python 3.13
        if: matrix.python-version == '3.13'
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.13
          auto-update-conda: true
          activate-environment: build-env
          environment-file: environment.yml
          channels: conda-forge

      - name: Install Build Dependencies for Python 3.13
        if: matrix.python-version == '3.13'
        run: |
          conda install -c conda-forge fftw openblas cmake pkg-config
          conda deactivate  # Deactivate if necessary

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]

      - name: Lint with Flake8
        run: |
          flake8 aicsshparam --count --verbose --show-source --statistics

      - name: Check with Black
        run: |
          black --check aicsshparam

  publish:
    if: contains(github.event.head_commit.message, 'Bump version')
    needs: [test, lint]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  
          
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Build Package
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}